#	rec pattern file
#
#	Format of each entry in this file:
#
#	# comment
#	function_prototype(args) size: nn
#	xx xx xx xx xx	# pattern bytes in ASCII hex (max 256 bytes)
#	xx &symbol xx	# take address of symbol from binary (4bytes)
#	xx @symbol xx	# take address of symbol from binary (4bytes pc-rel)
#	xx <symbol xx	# take upper 16 bytes of symbol from binary
#	xx >symbol xx	# take lower 16 bytes of symbol from binary
#	xx * * xx	# ignore * bytes
#	';'		# end of entry
#	next_function_prototype(args) size: nn
#	...
#
#-----------------------------------------------------------------------
#	Entry sequence for WinXP executables
#
#
#
crt0_entry() size: 64
55                   # push ebp
89 E5                # mov ebp,esp
83 EC 08             # sub esp,+0x8
A1 *  *  *  *        # mov eax,[0x403000]
85 C0                # test eax,eax
74 01                # jz 0x401010
CC                   # int3
D9 7D FE             # fnstcw [ebp-0x2]
0F B7 45 FE          # movzx eax,word [ebp-0x2]
25 C0 F0 FF FF       # and eax,0xfffff0c0
66 89 45 FE          # mov [ebp-0x2],ax
0F B7 45 FE          # movzx eax,word [ebp-0x2]
0D 3F 03 00 00       # or eax,0x33f
66 89 45 FE          # mov [ebp-0x2],ax
D9 6D FE             # fldcw [ebp-0x2]
C7 04 24 &main(int,char**)     # mov dword [esp],main
E8 @crt0_init()      # call crt0_init
89 EC                # mov esp,ebp
5D                   # pop ebp
C3                   # ret
;

